name: Check for Pivotal Tracker Story ID

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  pivotal_tracker_check:
    runs-on: ubuntu-latest
    steps:
    - name: Extract Story IDs
      id: extract_story_ids
      run: |
        PR_BODY=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                    -H "Accept: application/vnd.github.v3+json" \
                    https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} \
                    | jq -r '.body')

        if [ -z "$PR_BODY" ]; then
          echo "Pull request body is empty." >&2
          exit 1
        fi

        STORY_IDS=$(echo "$PR_BODY" | grep -oP '(?<=PT-)\d+|(?<=https://www\.pivotaltracker\.com/story/show/)\d+')

        if [ -z "$STORY_IDS" ]; then
          echo "No Pivotal Tracker Story IDs found." >&2
          exit 1
        fi
        echo "story_ids<<EOF" >> $GITHUB_OUTPUT
        echo "$STORY_IDS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Validate Stories in Pivotal Tracker
      run: |
        STORY_IDS="${{ steps.extract_story_ids.outputs.story_ids }}"
        INVALID_IDS=()

        for STORY_ID in $STORY_IDS; do
          RESPONSE=$(curl -s -H "X-TrackerToken: ${{ secrets.PIVOTAL_TRACKER_API_TOKEN }}" \
                      "https://www.pivotaltracker.com/services/v5/stories/$STORY_ID")
          
          if echo "$RESPONSE" | jq -e '.kind == "story" and .id == '"$STORY_ID"'' > /dev/null; then
            echo "Valid Pivotal Tracker Story ID found: $STORY_ID"
          else
            echo "Invalid Pivotal Tracker Story ID: $STORY_ID" >&2
            INVALID_IDS+=("$STORY_ID")
          fi
        done

        if [ ${#INVALID_IDS[@]} -ne 0 ]; then
          echo "The following Story IDs are invalid: ${INVALID_IDS[*]}" >&2
          exit 1
        fi
